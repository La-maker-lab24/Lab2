name: Python Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Read SonarCloud properties
        id: sonar_properties
        run: |
          echo "SONAR_PROJECT_KEY=$(grep sonar.projectKey sonar-project.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "SONAR_ORGANIZATION=$(grep sonar.organization sonar-project.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "SONAR_SOURCES=$(grep sonar.sources sonar-project.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "SONAR_TESTS=$(grep sonar.tests sonar-project.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "SONAR_EXCLUSIONS=$(grep sonar.exclusions sonar-project.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "SONAR_COVERAGE_REPORT=$(grep sonar.python.coverage.reportPaths sonar-project.properties | cut -d '=' -f2)" >> $GITHUB_ENV

      - name: Run tests
        run: |
          pytest

      - name: Run SonarCloud analysis
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.sources=${{ env.SONAR_SOURCES }}
            -Dsonar.tests=${{ env.SONAR_TESTS }}
            -Dsonar.exclusions=${{ env.SONAR_EXCLUSIONS }}
            -Dsonar.python.coverage.reportPaths=${{ env.SONAR_COVERAGE_REPORT }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
